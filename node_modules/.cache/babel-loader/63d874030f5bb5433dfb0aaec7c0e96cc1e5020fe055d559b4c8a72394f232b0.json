{"ast":null,"code":"'use strict';\n\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar functionsHaveConfigurableNames = require('functions-have-names').functionsHaveConfigurableNames();\nvar $TypeError = require('es-errors/type');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionName(fn, name) {\n  if (typeof fn !== 'function') {\n    throw new $TypeError('`fn` is not a function');\n  }\n  var loose = arguments.length > 2 && !!arguments[2];\n  if (!loose || functionsHaveConfigurableNames) {\n    if (hasDescriptors) {\n      define( /** @type {Parameters<define>[0]} */fn, 'name', name, true, true);\n    } else {\n      define( /** @type {Parameters<define>[0]} */fn, 'name', name);\n    }\n  }\n  return fn;\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}