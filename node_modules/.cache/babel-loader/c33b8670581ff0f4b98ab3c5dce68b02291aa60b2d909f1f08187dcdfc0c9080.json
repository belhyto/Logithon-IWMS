{"ast":null,"code":"'use strict';\n\nvar setFunctionName = require('set-function-name');\nvar $TypeError = require('es-errors/type');\nvar $Object = Object;\nmodule.exports = setFunctionName(function flags() {\n  if (this == null || this !== $Object(this)) {\n    throw new $TypeError('RegExp.prototype.flags getter called on non-object');\n  }\n  var result = '';\n  if (this.hasIndices) {\n    result += 'd';\n  }\n  if (this.global) {\n    result += 'g';\n  }\n  if (this.ignoreCase) {\n    result += 'i';\n  }\n  if (this.multiline) {\n    result += 'm';\n  }\n  if (this.dotAll) {\n    result += 's';\n  }\n  if (this.unicode) {\n    result += 'u';\n  }\n  if (this.unicodeSets) {\n    result += 'v';\n  }\n  if (this.sticky) {\n    result += 'y';\n  }\n  return result;\n}, 'get flags', true);","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}